[{"C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\index.js":"1","C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\Home.js":"2","C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\services\\Deezer\\DeezerWidgets\\PlayWidget.js":"3","C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\services\\Weather\\WeatherWidgets\\WindWidget.js":"4"},{"size":547,"mtime":1609375688230,"results":"5","hashOfConfig":"6"},{"size":4934,"mtime":1610154597150,"results":"7","hashOfConfig":"6"},{"size":661,"mtime":1609770977549,"results":"8","hashOfConfig":"6"},{"size":386,"mtime":1609751688457,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eaonk5",{"filePath":"12","messages":"13","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\index.js",[],"C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\Home.js",["21","22","23","24","25","26","27","28","29","30"],"import React,  {Component, createElement} from 'react';\r\nimport {Grid, makeStyles, SvgIcon} from '@material-ui/core';\r\nimport './App.css';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Button, Card,\r\n    CardColumns,\r\n    Col,\r\n    Collapse,\r\n    Container,\r\n    Form,\r\n    Input,\r\n    Label,\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    NavItem,\r\n    NavLink\r\n} from 'reactstrap';\r\nimport { withCookies } from 'react-cookie';\r\nimport Deezer from \"./services/Deezer/Deezer\";\r\nimport Weather from \"./services/Weather/Weather\";\r\nimport Gouv from \"./services/Gouv/Gouv\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        isAuthenticated: false,\r\n        user: undefined,\r\n        city: undefined,\r\n        showWeatherService: false,\r\n        csrfToken: undefined\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const {cookies} = props;\r\n        this.state.csrfToken = cookies.get('XSRF-TOKEN');\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.state = {\r\n            showDeezerForm : false,\r\n            showWeatherForm : false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/home/home', {credentials: 'include'});\r\n\r\n        const body = await response.text();\r\n        if (body === '') {\r\n            this.setState(({isAuthenticated: false}))\r\n        } else {\r\n            this.setState({isAuthenticated: true, user: JSON.parse(body)})\r\n        }\r\n    }\r\n\r\n    login() {\r\n        let port = (window.location.port ? ':' + window.location.port : '');\r\n        if (port === ':3000') {\r\n            port = ':8080';\r\n        }\r\n        window.location.href = '//' + window.location.hostname + port + '/private';\r\n    }\r\n\r\n    logout() {\r\n        fetch('/home/logout', {method: 'POST', credentials: 'include',\r\n            headers: {'X-XSRF-TOKEN': this.state.csrfToken}}).then(res => res.json())\r\n            .then(response => {\r\n                window.location.href = \"/logout\";\r\n            });\r\n    }\r\n\r\n    register() {\r\n        fetch(\"/home/register\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result.items\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    handleDeezerClick = () => {this.setState({showDeezerForm : !this.state.showDeezerForm})\r\n        console.log(this.state.showDeezerForm)}\r\n\r\n    handleWeatherClick = () => {this.setState({showWeatherForm : !this.state.showWeatherForm})\r\n        console.log(this.state.showDeezerForm)}\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const message = this.state.user ?\r\n            <h2>Bienvenue, {this.state.user.name} !</h2> :\r\n            <p>Connectez-vous ou inscrivez-vous pour accéder à votre Dashboard.</p>;\r\n\r\n        const button = this.state.isAuthenticated ?\r\n            <div>\r\n                <br/>\r\n                <CardColumns>\r\n                    <Card>\r\n                        <Deezer user={this.state.user}/>\r\n                    </Card>\r\n                    <Card>\r\n                        <Weather user={this.state}/>\r\n                    </Card>\r\n                    <Card>\r\n                        <Gouv user={this.state}/>\r\n                    </Card>\r\n                </CardColumns>\r\n            </div> :\r\n            null\r\n\r\n\r\n\r\n        //NavBar\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"md\">\r\n                    <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n                    <NavbarToggler onClick={this.toggle}/>\r\n                    <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                {this.state.isAuthenticated ?\r\n                                    <Button color=\"link\" onClick={this.logout}>Se déconnecter</Button>\r\n                                    : <div>\r\n                                        <Button color=\"link\" onClick={this.login}>Se connecter</Button>\r\n                                        <Button color=\"link\"><Link to=\"/register\">S'inscrire</Link></Button>\r\n                                    </div>\r\n                                }\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n                <Container fluid>\r\n                    {message}\r\n                    {button}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(Home);",["31","32"],"C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\services\\Deezer\\DeezerWidgets\\PlayWidget.js",["33","34"],"import React from 'react';\r\n\r\nclass PlayWidget extends React.Component{\r\n\r\n\r\n    render(){\r\n        let songs = this.props.artistData.data\r\n        let elements = [];\r\n\r\n        let randomIndex = Math.floor(Math.random() * songs.length);\r\n\r\n        return(<div>\r\n            <iframe scrolling=\"no\" frameBorder=\"0\" allowTransparency=\"true\"\r\n                    src={\"https://www.deezer.com/plugins/player?format=classic&autoplay=false&playlist=true&width=200&height=80&color=EF5466&layout=&size=medium&type=tracks&id=\" + songs[randomIndex].id + \"&app_id=1\"}\r\n                    width=\"200\" height=\"80\"/>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default PlayWidget\r\n","C:\\Users\\jorda\\Desktop\\dashboard\\dashboard_back_front\\db_login_oauth_react_V7\\src\\main\\myfrontend\\src\\services\\Weather\\WeatherWidgets\\WindWidget.js",[],{"ruleId":"35","severity":1,"message":"36","line":1,"column":28,"nodeType":"37","messageId":"38","endLine":1,"endColumn":41},{"ruleId":"35","severity":1,"message":"39","line":2,"column":9,"nodeType":"37","messageId":"38","endLine":2,"endColumn":13},{"ruleId":"35","severity":1,"message":"40","line":2,"column":15,"nodeType":"37","messageId":"38","endLine":2,"endColumn":25},{"ruleId":"35","severity":1,"message":"41","line":2,"column":27,"nodeType":"37","messageId":"38","endLine":2,"endColumn":34},{"ruleId":"35","severity":1,"message":"42","line":4,"column":8,"nodeType":"37","messageId":"38","endLine":4,"endColumn":17},{"ruleId":"35","severity":1,"message":"43","line":9,"column":5,"nodeType":"37","messageId":"38","endLine":9,"endColumn":8},{"ruleId":"35","severity":1,"message":"44","line":12,"column":5,"nodeType":"37","messageId":"38","endLine":12,"endColumn":9},{"ruleId":"35","severity":1,"message":"45","line":13,"column":5,"nodeType":"37","messageId":"38","endLine":13,"endColumn":10},{"ruleId":"35","severity":1,"message":"46","line":14,"column":5,"nodeType":"37","messageId":"38","endLine":14,"endColumn":10},{"ruleId":"35","severity":1,"message":"47","line":20,"column":5,"nodeType":"37","messageId":"38","endLine":20,"endColumn":12},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"35","severity":1,"message":"52","line":8,"column":13,"nodeType":"37","messageId":"38","endLine":8,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":13,"column":13,"nodeType":"55","endLine":15,"endColumn":46},"no-unused-vars","'createElement' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'SvgIcon' is defined but never used.","'AppNavbar' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'NavLink' is defined but never used.","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'elements' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]