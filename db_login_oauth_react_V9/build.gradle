plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'war'
    id "com.github.node-gradle.node" version "3.0.0-rc5"
    //id 'application'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

node {
    version = '14.15.3'

    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.projectDir}/src/main/myfrontend/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.projectDir}/src/main/myfrontend/npm")

    nodeModulesDir = file("${project.projectDir}/src/main/myfrontend")
}

task appInstallDependencies(type: NpmTask) {
    dependsOn "npmSetup"
    execOverrides {
        it.ignoreExitValue = true;
        it.workingDir = 'src/main/myfrontend'
    }
    args = ["install"]
}

task npmBuild(type: NpmTask) {
    dependsOn "appInstallDependencies"
    execOverrides {
        it.workingDir = 'src/main/myfrontend'
    }
    args = ["run", "build"]
}

task copyFrontendToBuild(type: Copy) {
    dependsOn 'npmBuild'
    from "$projectDir/src/main/myfrontend/build/"
    into "$buildDir/resources/main/static"
}


processResources {
    dependsOn 'copyFrontendToBuild'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.json:json:20171018'

    // https://mvnrepository.com/artifact/org.springframework/spring-webmvc
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.3.2'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.4.1'

    // https://mvnrepository.com/artifact/org.webjars/bootstrap
    compile group: 'org.webjars', name: 'bootstrap', version: '4.5.3'

    // https://mvnrepository.com/artifact/org.webjars/webjars-locator-core
    compile group: 'org.webjars', name: 'webjars-locator-core', version: '0.46'

    // https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
    //compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.5.0.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client', version: '2.4.1'

}

test {
    useJUnitPlatform()
}
